{"version":3,"file":"static/js/381.457a114b.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUH,EADV,wCACkDC,GADlD,kBAGoBG,EAAAA,EAAAA,IAAA,UAAaD,IAHjC,cAGGE,EAHH,yBAKIA,GALJ,gCAOHC,QAAQC,IAAI,KAAMC,SAPf,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACCP,EADD,UACUH,EADV,iCAC2CC,EAD3C,iCAC2ES,GAD3E,kBAGoBN,EAAAA,EAAAA,IAAA,UAAaD,IAHjC,cAGGE,EAHH,yBAIIA,GAJJ,gCAMHC,QAAQC,IAAI,KAAMC,SANf,gFAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACCT,EADD,UACUH,EADV,kBAC4BY,EAD5B,oBAC0CX,GAD1C,kBAGoBG,EAAAA,EAAAA,IAAA,UAAaD,IAHjC,cAGGE,EAHH,yBAIIA,GAJJ,gCAMHC,QAAQC,IAAI,KAAMC,SANf,gFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gFACCT,EADD,UACUH,EADV,kBAC4BY,EAD5B,4BACkDX,GADlD,kBAGoBG,EAAAA,EAAAA,IAAA,UAAaD,IAHjC,cAGGE,EAHH,yBAIIA,GAJJ,gCAMHC,QAAQC,IAAI,KAAMC,SANf,gFAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gFACCT,EADD,UACUH,EADV,kBAC4BY,EAD5B,4BACkDX,GADlD,kBAGoBG,EAAAA,EAAAA,IAAA,UAAaD,IAHjC,cAGGE,EAHH,yBAIIA,GAJJ,gCAMHC,QAAQC,IAAI,KAAMC,SANf,gF,uKC5CMO,EAASC,EAAAA,GAAAA,GAAH,2GAONC,EAAUD,EAAAA,GAAAA,GAAH,uFAKPE,EAAOF,EAAAA,GAAAA,GAAH,6E,SC8BjB,EAtCyB,WACvB,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAiBC,EAAjB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,yGACyBZ,EAAAA,EAAAA,IAAgBQ,GADzC,OACQjB,EADR,OAEQsB,EAAMtB,EAASuB,KAAKC,QACpBD,EAAOD,EAAIG,MAAM,EAAG,GAE1BT,EAAUO,GACVH,GAAU,GANZ,4CADc,uBAAC,WAAD,wBASdM,EACD,GAAE,CAACT,IAEAE,GACK,SAACQ,EAAA,EAAD,KAIP,0BACE,SAACd,EAAD,UACGE,EAAOa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASvB,EAAS,EAATA,GAC9B,OACE,2BACE,UAACG,EAAD,uBACU,0BAAOmB,QAEjB,SAACjB,EAAD,UAAUkB,MAJHvB,EAOZ,OAIR,ECvCD,EAHgB,WACd,OAAO,SAACwB,EAAD,GACR,C","sources":["components/API.js","components/ReviewsComp/Reviews.styled.jsx","components/ReviewsComp/ReviewsComp.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '04e81fd645700f6c06d8143699014c8e';\n\nexport async function getTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getSearchMovies(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getDetailsMovie(id) {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getCastMovie(id) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getReviewsMovie(id) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import styled from 'styled-components';\n\nexport const Author = styled.h3`\n  margin-bottom: 5px;\n  font-weight: 600;\n  font-size: 22px;\n  color: #e6990a;\n`;\n\nexport const Content = styled.h3`\n  color: #fad65f;\n  text-align: center;\n  font-weight: 400;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  background-color: #38383852;\n`;\n","import { useEffect, useState } from 'react';\nimport { getReviewsMovie } from 'components/API';\nimport { useParams } from 'react-router-dom';\nimport Spiner from 'components/Spinner/Spiner';\nimport { Content, Author, List } from './Reviews.styled';\n\nconst ReviewsComponent = () => {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n  const [isActive, setActive] = useState(true);\n\n  useEffect(() => {\n    async function fetch() {\n      const response = await getReviewsMovie(movieId);\n      const res = response.data.results;\n      const data = res.slice(0, 4);\n\n      setReview(data);\n      setActive(false);\n    }\n    fetch();\n  }, [movieId]);\n\n  if (isActive) {\n    return <Spiner />;\n  }\n\n  return (\n    <div>\n      <List>\n        {review.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <Author>\n                Author: <span>{author}</span>\n              </Author>\n              <Content>{content}</Content>\n            </li>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\nexport default ReviewsComponent;\n","import ReviewsComponent from 'components/ReviewsComp/ReviewsComp';\nconst Reviews = () => {\n  return <ReviewsComponent />;\n};\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","url","axios","response","console","log","message","getSearchMovies","query","getDetailsMovie","id","getCastMovie","getReviewsMovie","Author","styled","Content","List","useState","review","setReview","movieId","useParams","isActive","setActive","useEffect","res","data","results","slice","fetch","Spiner","map","author","content","ReviewsComp"],"sourceRoot":""}