{"version":3,"file":"static/js/27.d274c8fc.chunk.js","mappings":"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","sources":["components/API.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '04e81fd645700f6c06d8143699014c8e';\n\nexport async function getTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getSearchMovies(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getDetailsMovie(id) {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getCastMovie(id) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getReviewsMovie(id) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { BiSearchAlt } from 'react-icons/bi';\nexport const Forms = styled.form`\n  border: 1px solid black;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #695757;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-left: 140px;\n`;\nexport const IconB = styled(BiSearchAlt)`\n  width: 25px;\n  height: 25px;\n  fill: #a7a2a2;\n`;\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #313030;\n  :hover {\n    background-color: #252121;\n  }\n`;\n\nexport const SearchFormlabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  background-color: transparent;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: #ddd8d8;\n  }\n`;\nexport const ListMovie = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const Li = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 2px;\n  overflow: hidden;\n  background-color: transparent;\n`;\nexport const Items = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: #f2fa81e8;\n  height: 100%;\n  :hover {\n    border: 1px solid #f7fa47dd;\n  }\n`;\nexport const FilmName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from 'components/API';\nimport {\n  Forms,\n  SearchFormBtn,\n  SearchFormInput,\n  IconB,\n  ListMovie,\n  Items,\n  FilmName,\n  Li,\n} from './Form.styled';\n\nconst Form = () => {\n  const [searchParam, setSearchParam] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [d, setD] = useState([]);\n  const location = useLocation();\n  const value = searchParam.get('query');\n\n  useEffect(() => {\n    if (!value) return;\n    async function fetch() {\n      const response = await getSearchMovies(value);\n      const data = response.data.results;\n      console.log(data);\n      setD(data);\n    }\n    fetch();\n  }, [value]);\n\n  const handleClickBtn = e => {\n    e.preventDefault();\n    setSearchParam({ query });\n  };\n\n  return (\n    <>\n      <Forms onSubmit={handleClickBtn}>\n        <SearchFormInput\n          name=\"value\"\n          required\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search your favourite film\"\n          onChange={e => setQuery(e.currentTarget.value)}\n        />\n        <SearchFormBtn type=\"submit\">\n          <IconB />\n        </SearchFormBtn>\n      </Forms>\n      <ListMovie>\n        {d.map(({ id, original_title, poster_path, title }) => {\n          return (\n            <Li key={id}>\n              <Items to={`${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                  alt={title}\n                />\n                <FilmName>{original_title}</FilmName>\n              </Items>\n            </Li>\n          );\n        })}\n      </ListMovie>\n    </>\n  );\n};\nexport default Form;\n","import Form from 'components/Form/Form';\n\nconst Movies = () => {\n  return (\n    <div>\n      <Form />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","url","axios","response","console","log","message","getSearchMovies","query","getDetailsMovie","id","getCastMovie","getReviewsMovie","Forms","styled","IconB","BiSearchAlt","SearchFormBtn","SearchFormInput","ListMovie","Li","Items","Link","FilmName","useSearchParams","searchParam","setSearchParam","useState","setQuery","d","setD","location","useLocation","value","get","useEffect","data","results","fetch","onSubmit","e","preventDefault","name","required","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","map","original_title","poster_path","title","to","state","from","src","alt"],"sourceRoot":""}